@model Frisbeeboys.Web.Controllers.Scorecards.Models.ScorecardsIndexModel

@{
    var page = Model.Scorecards.Page;
    var pageSize = Model.Scorecards.PageSize;
    var totalCount = Model.Scorecards.TotalCount;
    
    var numPages = Math.Ceiling((double) totalCount / pageSize);
    bool hasPrevious = page > 1;
    bool hasNext = page < numPages;
    var start = 1 + pageSize * (page - 1);
    var end = Math.Min(totalCount, start + pageSize - 1);

    int[] Pagination(int leftEdge = 2, int leftCurrent = 2, int rightCurrent = 4, int rightEdge = 2)
    {
        var pages = new List<int>();
        var last = 0;

        for (var num = 1; num <= numPages; num++)
        {
            if (num <= leftEdge
                || (num > page - leftCurrent - 1 &&
                    num < page + rightCurrent)
                || num > numPages - rightEdge) {
                    if (last + 1 != num) {
                        pages.Add(0);
                    }
                    pages.Add(num);
                    last = num;
                }
        }
        return pages.ToArray();
    }
}

@if (totalCount > pageSize)
{
    <div class="bg-white text-black mb-4 p-4 flex">
        @{ var styles = "flex-initial text-center border-2 border-gray-300 px-3 py-1 border-r-0"; }
        <div class="@styles">
            Showing @start - @end of @totalCount
        </div>

        @foreach (var p in Pagination())
        {
            @if (p == 0)
            {
                <div class="@styles">...</div>
            }
            else
            {
                <a title="@p"
                   class="@styles @(p == page ? "bg-gray-400 text-white" : "")"
                   href="@Url.Action("Index", new {page = p, course = Model.Course, layout = Model.Layout})">
                    @p
                </a>
            }
        }
        @if (hasPrevious)
        {
            <a title="Previous"
               class="@styles px-4 @(!hasNext ? "border-r-2" : "")"
               href="@Url.Action("Index", new {page = Model.Scorecards.Page - 1, course = Model.Course, layout = Model.Layout})">🞀</a>
        }
        @if (hasNext)
        {
            <a title="Next"
               class="@styles px-4 border-r-2"
               href="@Url.Action("Index", new {page = Model.Scorecards.Page + 1, course = Model.Course, layout = Model.Layout})">🞂</a>
        }
    </div>
}