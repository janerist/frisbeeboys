@model Frisbeeboys.Web.Controllers.Scorecards.Models.ScorecardsIndexModel

@{
    var page = Model.Scorecards.Page;
    var pageSize = Model.Scorecards.PageSize;
    var totalCount = Model.Scorecards.TotalCount;

    var numPages = Math.Ceiling((double) totalCount / pageSize);
    bool hasPrevious = page > 1;
    bool hasNext = page < numPages;
    var start = 1 + pageSize * (page - 1);
    var end = Math.Min(totalCount, start + pageSize - 1);

    int[] Pagination(int leftEdge = 2, int leftCurrent = 2, int rightCurrent = 2, int rightEdge = 2)
    {
        var pages = new List<int>();
        var last = 0;

        for (var num = 1; num <= numPages; num++)
        {
            if (num <= leftEdge
                || (num > page - leftCurrent - 1 &&
                    num < page + rightCurrent)
                || num > numPages - rightEdge)
            {
                if (last + 1 != num)
                {
                    pages.Add(0);
                }
                pages.Add(num);
                last = num;
            }
        }
        return pages.ToArray();
    }
}

@if (totalCount > pageSize)
{
    <div class="table w-full sm:w-auto bg-white">
        <div class="table-row">
            <div class="table-cell px-2 align-middle border-gray-300 border-2 border-r-0 whitespace-nowrap">
                Showing @start - @end of @totalCount
            </div>
            @foreach (var p in Pagination())
            {
                if (p == 0)
                {
                    <div class="border-gray-300 border-2 py-1 px-3 border-r-0 align-middle hidden sm:table-cell">
                        ...
                    </div>
                }
                else
                {
                    <a title="@p"
                       class="border-gray-300 border-2 py-1 px-3 border-r-0 align-middle hidden sm:table-cell"
                       href="@Url.Action("Index", new {page = p, course = Model.Course, layout = Model.Layout})">
                        @p
                    </a>
                }
            }

            @if (hasPrevious)
            {
                <a title="Previous"
                   class="table-cell text-center border-gray-300 border-2 py-1 px-3 align-middle border-r-0 @(!hasNext ? "border-r-2" : "")"
                   href="@Url.Action("Index", new {page = Model.Scorecards.Page - 1, course = Model.Course, layout = Model.Layout})">
                    🞀
                </a>
            }
            @if (hasNext)
            {
                <a title="Next"
                   class="table-cell text-center border-gray-300 border-2 py-1 px-3 align-middle"
                   href="@Url.Action("Index", new {page = Model.Scorecards.Page + 1, course = Model.Course, layout = Model.Layout})">
                    🞂
                </a>
            }
        </div>
    </div>
}